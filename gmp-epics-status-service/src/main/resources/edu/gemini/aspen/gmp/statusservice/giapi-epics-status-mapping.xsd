<?xml version="1.0"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:annotation>
        <xs:documentation>
            Schema file defining the structure of the configuration file used by the gmp-epics-status-service
            to create epics channels and map them to GIAPI status items.
        </xs:documentation>
    </xs:annotation>
    <xs:element name="Channels">
        <xs:annotation>
            <xs:documentation>
                The 'Channels' root element, can have any number of 'SimpleChannel', 'AlarmChannel' and
                'HealthChannel' child elements, in any order.
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:choice  minOccurs="0" maxOccurs="unbounded">
                <xs:element name="SimpleChannel" type="SimpleChannelType"/>
                <xs:element name="AlarmChannel" type="AlarmChannelType"/>
                <xs:element name="HealthChannel" type="HealthChannelType"/>
            </xs:choice>
        </xs:complexType>
    </xs:element>

    <xs:simpleType name="dataType">
        <xs:annotation>
            <xs:documentation>
                These are the 4 supported data types. The mapping is as follows:
                Type      Java         Epics
                INT       Integer      DBR_Int
                FLOAT     Float        DBR_Float
                DOUBLE    Double       DBR_Double
                STRING    String       DBR_String
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="INT"/>
            <xs:enumeration value="FLOAT"/>
            <xs:enumeration value="DOUBLE"/>
            <xs:enumeration value="STRING"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="BaseChannelType">
        <xs:sequence>
            <xs:element name="giapiname" type="xs:string"/>
            <xs:element name="epicsname" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="HealthChannelType">
        <xs:annotation>
            <xs:documentation>
                Type for health channels. The initial value will be 'BAD'. This will create a DBR_String
                epics channel.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseChannelType"/>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="SimpleChannelType">
        <xs:annotation>
            <xs:documentation>
                Type for 'normal' channels.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="BaseChannelType">
                <xs:sequence>
                    <xs:element name="type" type="dataType"/>
                    <xs:element name="initial" type="xs:string"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="AlarmChannelType">
        <xs:annotation>
            <xs:documentation>
                Type for alarm channels. The configuration is the same as 'normal' channels. The severity of the
                alarm will default to 'ALARM_OK', the cause to 'ALARM_CAUSE_OK' and the message to an empty string.
                As epics channels lack support for an alarm message, an extra DBR_String channel, with the same
                name as the alarm channel, appending '.OMSS', will be created.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="SimpleChannelType"/>
        </xs:complexContent>
    </xs:complexType>
</xs:schema>
